# SPDX-FileCopyrightText: 2019 Comcast Cable Communications Management, LLC
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: v1
data:
  scytale.yaml: |
    # The unique fully-qualified-domain-name of the server.  It is provided to
    # the X-Scytale-Server header for showing what server fulfilled the request
    # sent.
    # (Optional)
    server: "scytale"

    ########################################
    #   Labeling/Tracing via HTTP Headers Configuration
    ########################################

    # Provides this build number to the X-Scytale-Build header for
    # showing machine version information.  The build number SHOULD
    # match the scheme `version-build` but there is not a strict requirement.
    # (Optional)
    build: "0.1.4"

    # Provides the region information to the X-Scytale-Region header
    # for showing what region this machine is located in.  The region
    # is arbitrary and optional.
    # (Optional)
    region: "east"

    # Provides the flavor information to the X-Scytale-Flavor header
    # for showing what flavor this machine is associated with.  The flavor
    # is arbitrary and optional.
    # (Optional)
    flavor: "mint"

    ##############################################################################
    # WebPA Service configuration
    ##############################################################################

    # For a complete view of the service config structure,
    # checkout https://godoc.org/github.com/xmidt-org/webpa-common/server#WebPA

    ########################################
    #   primary endpoint Configuration
    ########################################

    # primary defines the details needed for the primary endpoint.  The
    # primary endpoint accepts the events from scytale (typically).
    # define https://godoc.org/github.com/xmidt-org/webpa-common/server#Basic
    primary:
      # address provides the port number for the endpoint to bind to.
      # ":443" is ideal, but may require some special handling due to it being
      # a reserved (by the kernel) port.
      address: "{{ .Values.scytale.address.host }}:{{ .Values.scytale.address.port }}"
      # HTTPS/TLS
      #
      # certificateFile provides the public key and CA chain in PEM format if
      # TLS is used.  Note: the certificate needs to match the fqdn for clients
      # to accept without issue.
      #
      # keyFile provides the private key that matches the certificateFile
      # (Optional)
      # certificateFile: "/etc/scytale/public.pem"
      # keyFile: "/etc/scytale/private.pem"

    ########################################
    #   health endpoint Configuration
    ########################################

    # health defines the details needed for the health check endpoint.  The
    # health check endpoint is generally used by services (like AWS Route53
    # or consul) to determine if this particular machine is healthy or not.
    # define https://godoc.org/github.com/xmidt-org/webpa-common/server#Health
    health:
      # address provides the port number for the endpoint to bind to.
      # ":80" is ideal, but may require some special handling due to it being
      # a reserved (by the kernel) port.
      address: "{{ .Values.health.address.host }}:{{ .Values.health.address.port }}"

      # logInterval appears to be present from before we had formal metrics
      # (Deprecated)
      # logInterval: "60s"
      # options appears to be present from before we had formal metrics
      # (Deprecated)
      # options:
      #  - "PayloadsOverZero"
      #  - "PayloadsOverHundred"
      #  - "PayloadsOverThousand"
      #  - "PayloadsOverTenThousand"

    ########################################
    #   Debugging/pprof Configuration
    ########################################

    # pprof defines the details needed for the pprof debug endpoint.
    # define https://godoc.org/github.com/xmidt-org/webpa-common/server#Basic
    # (Optional)
    pprof:
      # address provides the port number for the endpoint to bind to.
      address: "{{ .Values.pprof.address.host }}:{{ .Values.pprof.address.port }}"

    ########################################
    #   Metrics Configuration
    ########################################

    # metric defines the details needed for the prometheus metrics endpoint
    # define https://godoc.org/github.com/xmidt-org/webpa-common/server#Metric
    # (Optional)
    metric:
      # address provides the port number for the endpoint to bind to.  Port 6204
      # was chosen because it does not conflict with any of the other prometheus
      # metrics or other machines in the xmidt cluster.  You may use any port you
      # wish.
      address: "{{ .Values.metric.address.host }}:{{ .Values.metric.address.port }}"

      # metricsOptions provides the details needed to configure the prometheus
      # metric data.  Metrics generally have the form:
      #
      # {namespace}_{subsystem}_{metric}
      #
      # so if you use the suggested value below, your metrics are prefixed like
      # this:
      #
      # xmidt_scytale_{metric}
      #
      # (Optional)
      metricsOptions:
        # namespace is the namespace of the metrics provided
        # (Optional)
        namespace: "xmidt"
        # subsystem is the subsystem of the metrics provided
        # (Optional)
        subsystem: "scytale"

    ########################################
    #   Logging Related Configuration
    ########################################

    # log configures the logging subsystem details
    log:
      # file is the name of the most recent log file.  If set to "stdout" this
      # will log to os.Stdout.
      # (Optional) defaults to os.TempDir()
      # file: "/var/log/scytale/scytale.log"
      file: "stdout"

      # level is the logging level to use - INFO, DEBUG, WARN, ERROR
      # (Optional) defaults to ERROR
      level: "DEBUG"

      # maxsize is the maximum file size in MB
      # (Optional) defaults to max 100MB
      maxsize: 50

      # maxage is the maximum number of days to retain old log files
      # (Optional) defaults to ignore age limit (0)
      maxage: 30

      # maxbackups is the maximum number of old log files to retain
      # (Optional) defaults to retain all (0)
      maxbackups: 10

      # json is a flag indicating whether JSON logging output should be used.
      # (Optional) defaults to false
      json: true

    ########################################
    #   Fanout Related Configuration
    ########################################

    # fanout describes the endpoints to fanout to and the http configuration to use for each fanout connection.
    # defined https://godoc.org/github.com/xmidt-org/webpa-common/xhttp/fanout#Configuration
    fanout:
      {{ if (.Values.scytale.fanout.endpoints) }}
      # endpoints are the URLs for each endpoint to fan out to.
      # if this is set, it overrides the service.fixed values.
      # (Optional) if empty, endpoints are driven by service discovery
      endpoints: {{ .Values.scytale.fanout.endpoints }}
      {{ end }}

      # Authorization is the Basic Auth token to use for each request.
      # (Optional) defaults to no auth token
      # WARNING: This is an example auth token. DO NOT use this in production.
      authorization: YXV0aEhlYWRlcg==

      # transport is a way to overwrite the default golang http.Transport configuration.
      # defined  https://golang.org/pkg/net/http/#Transport
      # (Optional) defaults described below
      transport:
        # (Optional) defaults to 0, aka do not limit it
        maxIdleConns: 0
        # (Optional) defaults to 100
        maxIdleConnsPerHost: 100
        # (Optional) defaults to 0s, aka do not timeout while in idle
        idleConnTimeout: "120s"

      # fanoutTimeout is the timeout for the entire fanout operation.
      # fanoutTimeout should be the same or greater than the clientTimeout.
      # fanoutTimeout includes multiple http requests.
      # (Optional) defaults to 45s
      fanoutTimeout: "127s"

      # clientTimeout is the http.Client Timeout.
      # (Optional) defaults to 30s
      clientTimeout: "127s"

      # concurrency is the maximum number of concurrent fanouts allowed.
      # concurrency is managed by a semaphore described https://godoc.org/github.com/xmidt-org/webpa-common/xhttp#Busy.
      # (Optional) defaults to 1000
      concurrency: 10

      # maxRedirects defines the maximum number of redirects each fanout will allow.
      # (Optional) default to unlimited
      maxRedirects: 3

      # redirectExcludeHeaders are the headers that will *not* be copied on a redirect.
      # (Optional) defaults to copying all headers over.
      redirectExcludeHeaders:
        - X-Xmidt-Log-Level


    ########################################
    #   Authorization Related Configuration
    ########################################

    # Any combination of these configurations may be used for authorization.
    # If ANY match, the request goes onwards.  If none are provided, no requests
    # will be accepted.

    # authHeader provides the list of basic auth headers that scytale will accept
    # as authorization. Note: This is an example authHeader. Do not use this in production.
    # (Optional)
    authHeader: ["xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=","dXNlcjpwYXNz"]

    # jwtValidator provides the details about where to get the keys for JWT
    # kid values and their associated information (expiration, etc) for JWTs
    # used as authorization
    # (Optional)
    jwtValidator:
      keys:
        factory:
          uri: "https://jwt.example.com/keys/{keyId}"
        purpose: 0
        updateInterval: 604800000000000

    # capabilityConfig provides the details needed for checking an incoming JWT's
    # capabilities.  If this isn't provided, no checking is done.  The capability
    # is expected to have the format:
    #
    # {firstPiece}:{secondPiece}:{thirdPiece}:{endpoint}:{method}
    #
    # The first three pieces have a single expectation given in this configuration.
    # The endpoint is a regular expression that should match the endpoint the
    # request was sent to. The method is usually the method of the request, such as
    # GET.  The accept all method is a catchall string that indicates the capability
    # is approved for all methods.
    # (Optional)
    # capabilityConfig:
    #   firstPiece: "p1"
    #   secondPiece: "p2"
    #   thirdPiece: "p3"
    #   acceptAllMethod: "all"

    ########################################
    #   Service Discovery Configuration
    ########################################

    # service configures the server for service discovery.
    # defined https://godoc.org/github.com/xmidt-org/webpa-common/service/servicecfg#Options
    # (Optional) defaults to not set.
    # If set consul or fixed must be used. Using fixed is the same as setting fanout.endpoints.
    service:
      # defaultScheme, used for the registered servers for communication.
      # (Optional) defaults to https
      defaultScheme: http

      # vnodeCount used for consistent hash calculation github.com/billhathaway/consistentHash.
      # number of virtual nodes. should be a prime number
      # it is a tradeoff of memory and ~ log(N) speed versus how well the hash spreads
      # (Optional) defaults to 211
      vnodeCount: 211

      # disableFilter disables filtering.
      # (Deprecated) does not do anything
      # disableFilter: false

      # fixed is the list of servers in the datacenter.
      # (Optional) default to empty list
      fixed:
        - http://petasos:6400
kind: ConfigMap
metadata:
  labels:
    app: xmidt-app
  name: scytale-config
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    component: scytale
    release: scytale
  name: scytale
spec:
  clusterIP: None
  ports:
    - name: primary
      port: {{ .Values.scytale.address.port }}
      protocol: TCP
    - name: health
      port: {{ .Values.health.address.port }}
      protocol: TCP
    - name: pprof
      port: {{ .Values.pprof.address.port }}
      protocol: TCP
    - name: metric
      port: {{ .Values.metric.address.port }}
      protocol: TCP
  selector:
    app: xmidt-app-scytale
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scytale
  labels:
    app: xmidt-app-scytale
spec:
  selector:
    matchLabels:
      app: xmidt-app-scytale
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  serviceName: xmidt-app-scytale
  template:
    metadata:
      labels:
        app: xmidt-app-scytale
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - xmidt-app-scytale
      volumes:
        - name: scytale-config
          projected:
            sources:
              - configMap:
                  name: scytale-config
                  items:
                    - key: scytale.yaml
                      path: scytale.yaml
                      mode: 0755
      securityContext:
        runAsNonRoot: false
        runAsUser: 999
        supplementalGroups: [999]
      containers:
        - image: {{ .Values.scytale.image }}
          name: scytale
          ports:
            - containerPort: {{ .Values.scytale.address.port }}
              protocol: TCP
            - containerPort: {{ .Values.health.address.port }}
              protocol: TCP
            - containerPort: {{ .Values.pprof.address.port }}
              protocol: TCP
            - containerPort: {{ .Values.metric.address.port }}
              protocol: TCP
          volumeMounts:
            - name: scytale-config
              mountPath: "/etc/scytale"
              readOnly: true
      {{ if (.Values.imagePullSecretName) }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretName }}}
      {{ end }}
